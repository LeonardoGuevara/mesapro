---
session: hri_safety_perception
init_cmd: |
  #exec /bin/bash
  cd @TMULE_CONFIG_DIR@ || true
  set -o pipefail
  function export_default () {
    var_name="$1"
    var_default="$2"
    eval $var_name="${!var_name:-$var_default}"
    export $var_name
    echo "  $0 -> $var_name=${!var_name}"
  }
  

  #########################################################################################
  # HUMAN-AWARE NAVIGATION PARAMETERS
  export_default CATKIN_WORKSPACE "$HOME/rasberry_ws"
  export_default CONFIG_DIRECT "$(rospack find mesapro)/config/" #directory of mesapro config file
  export_default CONDA_DIRECT "$HOME/anaconda3 || $HOME/miniconda3" # directory where conda or minicoda is installed 
  export_default CONDA_ENV "mypython3" #name of the conda environment with python3 
  export_default BAG_FILE "$HOME/Documents/mesapro/bags/evaluation/all_data_test_2022-04-20-13-24-45.bag" #full name of the bag file to be reproduced 
  export_default RVIZ_CONFIG $(rospack find mesapro)/config/row_traversal_action_sim.rviz
  
  export_default VISUAL_MODE 3 # "1" for testing only camera perception, "2" for gazebo simulation, "3" for real implementation 
  export_default USE_CAMERA_DETECTOR true #if "false", the rgbd+thermal human detector is not launched
  export_default USE_THERMAL_INFO true # if "true", thermal information from FLIR camera is used in the camera_detector
  export_default USE_BAG false #if "true", a bag file is launched instead of getting on-line data from sensors
  export_default USE_LEG_DETECTOR false #if "false", Lidar based leg_detector is not launched
  export_default USE_GESTURE_CONTROL true # if "true", gesture detection is used to control robot actions
  export_default USE_VISUAL_ALERTS true # if "true", colored beacon is activated
  export_default USE_AUDIO_ALERTS true # if "true", voice messages are activated
  export_default USE_VISUALIZATION false # if "true", visualization window is activated in the robot local screen
  export_default USE_SAFETY_SYSTEM true # if "false", the human perception and safety systems are not launched, useful when testing data from bag files
  export_default USE_AUTOMATIC_REACTIVATION false # if "true", robot can resume the previos goal after being "waiting for a new command" for a long time
  export_default N_CAMERAS 2 # "1" means, the second camera is emulated, "2" means both are real cameras
  export_default N_LANGUAGES 1 # "1" means, only english version of voice messages is reproduced, "2" means english+polish version
  export_default OPENPOSE_VISUAL false # if "true", openpose skeleton detections are visualized in the robot local screen
  export_default ARDUINO_PORT "/dev/ttyACM0" #name of the port where arduino is connected 
  export_default RS_SERIAL_N2 "146222253484" #serial number realsense camera back
  export_default RS_SERIAL_N1 "146222254714" #serial number realsense camera front
  export_default FLIR_SERIAL_N2 "801b002f-5119-3038-3532-373600000000" #serial number thermal camera back
  export_default FLIR_SERIAL_N1 "000c0035-510f-3538-3530-333500000000" #serial number thermal camera front
  export_default FLIR_MIN_RANGE "29500" # minimum measurement range for scaling to pixel value [0,255]
  export_default FLIR_MAX_RANGE "31000" # mamixum measurement range for scaling to pixel value [0,255]
  ##############################################################################################
  # Source ROS
  # source "/opt/ros/$(rosversion -d)/setup.bash"
  source $CATKIN_WORKSPACE/devel/setup.bash
  #########################################################################################
  #Set up ROS MASTER AND ROS IP
  #export_default ROS_IP "192.168.0.224" #Zotac IP address, using ethernet
  #export_default ROS_MASTER "192.168.0.101" #NUC IP address,using ethernet, as MASTER
  
  export_default ROS_IP "10.101.12.50" #Zotac IP address, using wifi
  export_default ROS_MASTER "10.101.12.112" #NUC IP address, using wifi, as MASTER
  export ROS_MASTER_URI="http://$ROS_MASTER:11311/"
  export ROS_IP=$ROS_IP  
  
  #export ROS_MASTER_URI="http://192.168.0.224:11311/"
  #export ROS_IP=192.168.0.224 #Zotac IP address
  #############################################################################################

##############################################################################################
windows:
- name: bag_files
  panes:
  - sleep 5 ; if $USE_BAG ; then roslaunch mesapro bags_all_info.launch bag_file:=$BAG_FILE; fi
  check: "rostopic list || ! $USE_BAG"
- name: rgbd_cameras
  panes:
  - sleep 5 ; if ! $USE_BAG ; then roslaunch mesapro rs_multiple_devices.launch rs_serial_n1:=$RS_SERIAL_N1 rs_serial_n2:=$RS_SERIAL_N2 num_cam:=$N_CAMERAS; fi
  cleck: "rostopic list | grep -q /camera1/color/image_raw | grep -q /camera2/color/image_raw  || $USE_BAG"
- name: thermal_cameras
  panes:
  - if ! $USE_BAG ; then roslaunch mesapro flir_thermal_module.launch flir_serial_n1:=$FLIR_SERIAL_N1 flir_serial_n2:=$FLIR_SERIAL_N2 num_cam:=$N_CAMERAS min_range:=$FLIR_MIN_RANGE max_range:=$FLIR_MAX_RANGE; fi
  check: "rostopic list || $USE_BAG"
- name: hri_dr_spaam_detector
  panes:
  - if $USE_LEG_DETECTOR ; then source $CONDA_DIRECT/etc/profile.d/conda.sh ; fi ; if $USE_LEG_DETECTOR ; then conda activate $CONDA_ENV ; fi ; if $USE_LEG_DETECTOR ; then roslaunch dr_spaam_ros dr_spaam_ros.launch ; fi
  check: "rostopic list | grep -q /dr_spaam_detections || ! $USE_LEG_DETECTOR" 
- name: hri_lidar_perception
  panes:
  - if $USE_LEG_DETECTOR ; then roslaunch dr_spaam_ros leg_tracking.launch ; fi
  check: "rostopic list | grep -q /people_tracker/pose_array || ! $USE_LEG_DETECTOR" 
- name: hri_cameras_perception
  panes:
  - sleep 5 ; if $USE_CAMERA_DETECTOR ; then roslaunch mesapro hri_camera_detector.launch config_direct:=$CONFIG_DIRECT thermal_info:=$USE_THERMAL_INFO n_cameras:=$N_CAMERAS openpose_visual:=$OPENPOSE_VISUAL; fi
  - sleep 5 ; if $USE_BAG ; then roslaunch mesapro hri_perception_system.launch config_direct:=$CONFIG_DIRECT camera_info:=true; else roslaunch mesapro hri_perception_system.launch config_direct:=$CONFIG_DIRECT camera_info:=$USE_CAMERA_DETECTOR; fi
  check: "rostopic list | grep -q /human_info" 
- name: hri_safety_system
  panes:
  - if $USE_SAFETY_SYSTEM ; then roslaunch mesapro hri_safety_system.launch config_direct:=$CONFIG_DIRECT gesture_control:=$USE_GESTURE_CONTROL automatic_reactivation:=$USE_AUTOMATIC_REACTIVATION ; fi
  - sleep 5 ; if $USE_SAFETY_SYSTEM ; then roslaunch mesapro hri_audio_visual_alerts.launch config_direct:=$CONFIG_DIRECT arduino_port:=$ARDUINO_PORT use_visual_alerts:=$USE_VISUAL_ALERTS use_audio_alerts:=$USE_AUDIO_ALERTS n_languages:=$N_LANGUAGES ; fi
  check: "rostopic list | grep -q /human_safety_info"
- name: hri_visualization
  panes:
  - sleep 5 ; if $USE_VISUALIZATION ; then roslaunch mesapro hri_visualization.launch visual_mode:=$VISUAL_MODE config_direct:=$CONFIG_DIRECT thermal_info:=$USE_THERMAL_INFO n_cameras:=$N_CAMERAS ; fi
- name: rviz
  panes:
  - if $USE_VISUALIZATION ; then DISPLAY=:0 rviz -d $RVIZ_CONFIG ; fi
#############################################################################################

