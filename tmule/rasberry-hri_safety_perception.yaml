---
session: hri_safety_perception
init_cmd: |
  #exec /bin/bash
  cd @TMULE_CONFIG_DIR@ || true
  set -o pipefail
  function export_default () {
    var_name="$1"
    var_default="$2"
    eval $var_name="${!var_name:-$var_default}"
    export $var_name
    echo "  $0 -> $var_name=${!var_name}"
  }

  # Set up ROS, robot and scenario configs, catkin_workspace, robot number:
  # Source ROS
   source "/opt/ros/$(rosversion -d)/setup.bash"

  # Configure the development workspace (assuming we are in rasberry_bringup/tmule)
  export_default CATKIN_WORKSPACE "`readlink -f ../../../.. || echo $HOME/rasberry_ws`"
   source "$CATKIN_WORKSPACE/devel/setup.bash"
   source ~/rasberry_ws/devel/setup.bash
   source ~/catkin_build_ws/install/setup.bash --extend
  
  # Search for VPN tun device
  #export_default VPN_BASE_ADDR "10.8.0.0"
  #default_iface=`route -n | grep "^$VPN_BASE_ADDR" | tr -s " " |  cut -f8 -d" " || echo lo`
  default_ip=`ip addr show dev "$default_iface" | grep "inet " | sed 's@ *inet \([0-9\.]*\).*@\1@' || echo 127.0.0.1`
  # Set ROS_MASTER to the correct IP
  export_default ROS_MASTER $default_ip
  # Set ROS_IP not to the IP that we will connect to remotely
  export_default ROS_IP `ip route get $ROS_MASTER | grep "src" | sed 's/.*src \([0-9\.]*\).*/\1/' || echo $ROS_MASTER`
  # Set ROS_HOSTNAME to the ROS_IP to avoid configuring /etc/hosts for anyone who connects
  export_default ROS_HOSTNAME "$ROS_IP"
  export ROS_MASTER_URI="http://$ROS_MASTER:11311/"

  #########################################################################################
  # HUMAN-AWARE NAVIGATION
  export_default CONFIG_DIRECT "$(rospack find mesapro)/config/" #directory of config file
  export_default AUDIO_DIRECT "$(rospack find mesapro)/audio/" #directory of audio files
  export_default VISUAL_MODE 3 # "3" means perception+topological navigation info is displayed
  export_default OPERATION_MODE "logistics" #it can be "logistics" or "UVC"
  export_default THERMAL_INFO False # "True" means use thermal information from FLIR camera
  export_default OPENPOSE_PYTHON "$CATKIN_WORKSPACE/src/openpose/build/python" #assuming OpenPose is inside the RASBERRY_WS folder
  export_default OPENPOSE_MODELS "$CATKIN_WORKSPACE/src/openpose/models"
  export_default POSTURE_CLASSIFIER_MODEL "$(rospack find mesapro)/config/classifier_model_3D_v2.joblib" #model of the human gesture classifier
 ###########################################################################################

################################################################################### Human perception & safety system - Using off-line data
windows:
- name: bag_files
  panes:
  - roslaunch mesapro bags_data_rgbd_lidar.launch
  check: "rostopic list"
- name: hri_dr_spaam_detector
  panes:
  - source /home/thorvald/miniconda3/etc/profile.d/conda.sh ; conda activate mypython3 ; roslaunch dr_spaam_ros dr_spaam_ros.launch
  check: "rostopic list | grep -q /dr_spaam_detections" 
- name: hri_lidar_perception
  panes:
  - roslaunch dr_spaam_ros leg_tracking.launch 
  check: "rostopic list | grep -q /people_tracker/pose_array" 
- name: hri_cameras_perception
  panes:
  - roslaunch mesapro hri_camera_detector.launch openpose_python:=$OPENPOSE_PYTHON openpose_models:=$OPENPOSE_MODELS posture_classifier_model:=$POSTURE_CLASSIFIER_MODEL thermal_info:=$THERMAL_INFO
  - rosrun mesapro human_perception_system.py 
  check: "rostopic list | grep -q /human_info_camera /human_info" 
- name: hri_safety_system
  panes:
  - roslaunch mesapro hri_safety_system.launch audio_direct:=$AUDIO_DIRECT operation_mode:=$OPERATION_MODE
  check: "rostopic list | grep -q /human_safety_info"
- name: hri_visualization
  panes:
  - roslaunch mesapro hri_visualization.launch visual_mode:=$VISUAL_MODE config_direct:=$CONFIG_DIRECT 
#############################################################################################

